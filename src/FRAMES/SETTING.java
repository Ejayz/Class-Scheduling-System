/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FRAMES;

import cs_system.DB_class.Add_Room;
import cs_system.DB_class.Import;
import cs_system.DB_class.Updater;
import java.io.File;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author monica hancock
 */
public class SETTING extends javax.swing.JFrame {

    /**
     * Creates new form SETTING
     */
    public SETTING() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        SETTINGNAME = new javax.swing.JLabel();
        ButtonUpdateUsername = new javax.swing.JButton();
        SETTINGPASSWORD = new javax.swing.JLabel();
        UsernameUpdate = new javax.swing.JTextField();
        ButtonUpdatePassword = new javax.swing.JButton();
        PasswordUpdate = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/exit-2.png"))); // NOI18N
        jButton1.setText("BACK");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 160, 60));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/logog.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 270, 150));

        SETTINGNAME.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        SETTINGNAME.setForeground(new java.awt.Color(255, 255, 0));
        SETTINGNAME.setText("USERNAME");
        getContentPane().add(SETTINGNAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, -1, -1));

        ButtonUpdateUsername.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonUpdateUsername.setText("UPDATE");
        ButtonUpdateUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonUpdateUsernameActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonUpdateUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 210, 110, 40));

        SETTINGPASSWORD.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        SETTINGPASSWORD.setForeground(new java.awt.Color(255, 255, 0));
        SETTINGPASSWORD.setText("PASSWORD");
        getContentPane().add(SETTINGPASSWORD, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, -1, -1));
        getContentPane().add(UsernameUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 270, 42));

        ButtonUpdatePassword.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ButtonUpdatePassword.setText("UPDATE");
        ButtonUpdatePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonUpdatePasswordActionPerformed(evt);
            }
        });
        getContentPane().add(ButtonUpdatePassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 270, 110, 40));
        getContentPane().add(PasswordUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 270, 270, 40));

        jButton2.setText("EXPORT DATABASE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 150, 40));

        jButton3.setText("IMPORT DATABASE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 30, 150, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/FACULTYBACKGROUND.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 550));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new DASHBOARD().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ButtonUpdateUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonUpdateUsernameActionPerformed

        Updater update = new Updater();

        if (UsernameUpdate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username must not be empty or null", "Empty Feild Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to update your username??", null, JOptionPane.OK_OPTION);
            if (choice == 0) {

                update.setUsername(UsernameUpdate.getText().toString());
                if (update.UpdateUsername() == 0) {

                    JOptionPane.showMessageDialog(this, "Username was update successfully");

                } else {
                    JOptionPane.showMessageDialog(this, update.getError());
                }
            }
        }
    }//GEN-LAST:event_ButtonUpdateUsernameActionPerformed

    private void ButtonUpdatePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonUpdatePasswordActionPerformed
        Updater update = new Updater();

        if (PasswordUpdate.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Password must not be empty or null", "Empty Feild Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to update your Password?", null, JOptionPane.OK_OPTION);
            if (choice == 0) {

                update.setUsername(PasswordUpdate.getText().toString());
                if (update.UpdatePassword() == 0) {

                    JOptionPane.showMessageDialog(this, "Password was update successfully");

                } else {
                    JOptionPane.showMessageDialog(this, update.getError());
                }
            }
        }
    }//GEN-LAST:event_ButtonUpdatePasswordActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try {
            ProcessBuilder pb = new ProcessBuilder("cmd");

            File input = new File("C:\\cs_system\\bin\\export\\input.txt");
            pb.redirectInput(input);

            Process p = pb.start();
            if (p.waitFor() == 0) {
                JOptionPane.showMessageDialog(this, "Exported database succesfully");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int action = JOptionPane.showConfirmDialog(this, "This action will wipe your entire database. System will keep backup record of your database", "Confirm action", JOptionPane.OK_OPTION);
        if (action == 0) {
            String password = JOptionPane.showInputDialog(this, "Enter your password to confirm this action");
            if (new Add_Room().ValidateDelete(password)) {

                JFileChooser jf = new JFileChooser();
                jf.setCurrentDirectory(new File(System.getProperty("user.home")));
                jf.setFileSelectionMode(JFileChooser.FILES_ONLY);
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Sql Files","sql");
                jf.setFileFilter(filter);
                int actions = jf.showOpenDialog(this);

                
                if (actions == JFileChooser.APPROVE_OPTION) {
                    try {
                        String Path = jf.getSelectedFile().getAbsolutePath();
                        Import imp = new Import();
                        imp.Import_File(Path);

                        ProcessBuilder pb = new ProcessBuilder("cmd");
                        File input = new File("C:\\cs_system\\bin\\import\\input.txt");
                        pb.redirectInput(input);

                        Process p = pb.start();
                        if (p.waitFor() == 0) {
                            File input1 = new File("C:\\cs_system\\bin\\import\\input.txt");

                            pb.redirectInput(input1);

                            Process p1 = pb.start();
                            if (p1.waitFor() == 0) {
                                JOptionPane.showMessageDialog(this, "Import finished successfully");
                            } else {
                                JOptionPane.showMessageDialog(this, "File not found.Are you sure you put export.sql on desktop?");
                            }
                        }

                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }

                } else if (actions == JFileChooser.CANCEL_OPTION) {
                    JOptionPane.showMessageDialog(this, "User cancled the operation.\nAborting import actions");

                }
            } else {
                JOptionPane.showMessageDialog(this, "The password you entered is incorrect\nAborting import actions");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SETTING.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SETTING.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SETTING.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SETTING.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SETTING().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonUpdatePassword;
    private javax.swing.JButton ButtonUpdateUsername;
    private javax.swing.JPasswordField PasswordUpdate;
    private javax.swing.JLabel SETTINGNAME;
    private javax.swing.JLabel SETTINGPASSWORD;
    private javax.swing.JTextField UsernameUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
