/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FRAMES;

import FRAMES.CLASSES.RegexChecker;
import FRAMES.CLASSES.StringFormater;
import FRAMES.PrintFrame.Room_Print;
import SIMPLE_RECORD.CLASSES.FileCreator;
import cs_system.DB_class.Add_Room;
import cs_system.DB_class.LoginClass;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author monica hancock
 */
public class ROOM extends javax.swing.JFrame {

    /**
     * Creates new form ROOM
     */
    String Start1;
    String Day;
    String End1;
    String Room;

    public ROOM() {
        initComponents();
        Add_Room AR = new Add_Room();
        AR.DisplayData(jTable2);
        UPDATE.setVisible(false);
        delete.setVisible(false);
        CANCEL.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SECTION = new javax.swing.JTextField();
        COURSETITLE = new javax.swing.JTextField();
        TEACHER = new javax.swing.JTextField();
        ROOM = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        STARTHH = new javax.swing.JComboBox<>();
        ENDPERIOD = new javax.swing.JComboBox<>();
        ENDMM = new javax.swing.JComboBox<>();
        ENDHH = new javax.swing.JComboBox<>();
        DAY = new javax.swing.JComboBox<>();
        STARTMM = new javax.swing.JComboBox<>();
        STARTPERIOD = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        UPDATE = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        CANCEL = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        SEARCH = new javax.swing.JTextField();
        SEARCHBUTTON = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(SECTION, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 270, 42));
        jPanel1.add(COURSETITLE, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 270, 42));
        jPanel1.add(TEACHER, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 270, 42));
        jPanel1.add(ROOM, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 270, 42));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("END TIME");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 400, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("SECTION");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("COURSE TITLE");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("TEACHER");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 0));
        jLabel10.setText("ROOM");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 470, -1, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        jLabel11.setText("START TIME");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 0));
        jLabel12.setText("DAYS");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 540, 110, 30));

        STARTHH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HH", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " ", " " }));
        jPanel1.add(STARTHH, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 60, 40));

        ENDPERIOD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        jPanel1.add(ENDPERIOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 430, 60, 40));

        ENDMM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));
        jPanel1.add(ENDMM, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, 60, 40));

        ENDHH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HH", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " ", " " }));
        jPanel1.add(ENDHH, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 60, 40));

        DAY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY" }));
        jPanel1.add(DAY, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 270, 40));

        STARTMM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MM", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));
        jPanel1.add(STARTMM, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 60, 40));

        STARTPERIOD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AM", "PM" }));
        jPanel1.add(STARTPERIOD, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 60, 40));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("RESET");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 580, 110, 30));

        UPDATE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UPDATE.setText("UPDATE");
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });
        jPanel1.add(UPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 540, 110, 30));

        delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 580, 110, 30));

        CANCEL.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CANCEL.setText("CANCEL");
        CANCEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CANCELActionPerformed(evt);
            }
        });
        jPanel1.add(CANCEL, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 620, 110, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 330, 650));

        jScrollPane4.setBackground(new java.awt.Color(153, 204, 255));
        jScrollPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204), 3));
        jScrollPane4.setForeground(new java.awt.Color(0, 0, 204));
        jScrollPane4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane4MouseClicked(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "SECTION", "COURSE TITLE", "TEACHER", "DAYS", "START TIME", "END TIME", "ROOM"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable2);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 830, 610));

        SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHActionPerformed(evt);
            }
        });
        getContentPane().add(SEARCH, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, 600, 40));

        SEARCHBUTTON.setBackground(new java.awt.Color(0, 0, 153));
        SEARCHBUTTON.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SEARCHBUTTON.setForeground(new java.awt.Color(255, 255, 255));
        SEARCHBUTTON.setText("SEARCH");
        SEARCHBUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHBUTTONActionPerformed(evt);
            }
        });
        getContentPane().add(SEARCHBUTTON, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 110, 160, 40));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/exit-2.png"))); // NOI18N
        jButton4.setText("EXIT");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        jButton1.setText("EXPORT DATA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 40, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/BACKFORADDROOM.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1330, 940));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        StringFormater SF = new StringFormater();
        if (STARTHH.getSelectedItem().toString().equals("HH")
                || STARTMM.getSelectedItem().toString().equals("MM")
                || ENDHH.getSelectedItem().toString().equals("HH")
                || ENDHH.getSelectedItem().toString().equals("HH")
                || SECTION.getText().isEmpty()
                || COURSETITLE.getText().isEmpty()
                || TEACHER.getText().isEmpty()
                || DAY.getSelectedItem().equals("DAY")
                || ROOM.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Error:Please check all feild and make sure you have entered a valid data or it is not empty ");
        } else if (new RegexChecker().Checkdata(ROOM.getText())) {
            JOptionPane.showMessageDialog(this, "Error:Non-Numberical characters aree not allowed.");
        } else {

            Add_Room AR = new Add_Room();
            SF.setHours(STARTHH.getSelectedItem().toString());
            SF.setMinutes(STARTMM.getSelectedItem().toString());
            SF.setPeriod(STARTPERIOD.getSelectedItem().toString());
            String Start = SF.FinalTime();
            SF.setHours(ENDHH.getSelectedItem().toString());
            SF.setMinutes(ENDMM.getSelectedItem().toString());
            SF.setPeriod(ENDPERIOD.getSelectedItem().toString());
            String End = SF.FinalTime();

            if (AR.CheckRoom(DAY.getSelectedItem().toString(), ROOM.getText(), Start, End)) {
                JOptionPane.showMessageDialog(this, "Error:Schedule in\n Room:" + ROOM.getText() + "\n Day:" + DAY.getSelectedItem() + "\n Time:" + Start + "-" + End + "\n is already occupied. Please adjust your start and end time ,your day or your room.");
            } else {
                int action = JOptionPane.showConfirmDialog(this, "Are you sure you want to add this data?", "Confirm Action", JOptionPane.YES_OPTION);
                if (action == 0) {
                    int Result = AR.InsertRoom(SECTION.getText(), COURSETITLE.getText(), TEACHER.getText(), DAY.getSelectedItem().toString(), Start, End, ROOM.getText());

                    if (Result == 1) {
                        JOptionPane.showMessageDialog(this, "Room data inserted.");
                        AR.DisplayData(jTable2);
                        SECTION.setText("");
                        COURSETITLE.setText("");
                        TEACHER.setText("");
                        DAY.setSelectedIndex(0);

                        STARTHH.setSelectedIndex(0);
                        STARTMM.setSelectedIndex(0);
                        STARTPERIOD.setSelectedIndex(0);

                        ENDHH.setSelectedIndex(0);
                        ENDMM.setSelectedIndex(0);
                        ENDPERIOD.setSelectedIndex(0);
                        ROOM.setText("");

                    } else {
                        JOptionPane.showMessageDialog(this, "Error:Cannot add data to database.Please contact support for help.");
                    }
                }
            }

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SEARCHActionPerformed

    private void SEARCHBUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHBUTTONActionPerformed

        Add_Room AR = new Add_Room();
        if (!AR.SearchRoom(jTable2, SEARCH.getText())) {
            JOptionPane.showMessageDialog(this, "Error:Cant find related data for " + SEARCH.getText());
        }
    }//GEN-LAST:event_SEARCHBUTTONActionPerformed

    private void jScrollPane4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jScrollPane4MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        SECTION.setText("");
        COURSETITLE.setText("");
        TEACHER.setText("");
        DAY.setSelectedIndex(0);

        STARTHH.setSelectedIndex(0);
        STARTMM.setSelectedIndex(0);
        STARTPERIOD.setSelectedIndex(0);

        ENDHH.setSelectedIndex(0);
        ENDMM.setSelectedIndex(0);
        ENDPERIOD.setSelectedIndex(0);
        ROOM.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed

        if (new RegexChecker().Checkdata(ROOM.getText())) {
            JOptionPane.showMessageDialog(this, "Error:Non-Numberical characters aree not allowed.");
        } else {
            StringFormater SF = new StringFormater();
            Add_Room AR = new Add_Room();

            SF.setHours(STARTHH.getSelectedItem().toString());
            SF.setMinutes(STARTMM.getSelectedItem().toString());
            SF.setPeriod(STARTPERIOD.getSelectedItem().toString());
            String Start = SF.FinalTime();
            SF.setHours(ENDHH.getSelectedItem().toString());
            SF.setMinutes(ENDMM.getSelectedItem().toString());
            SF.setPeriod(ENDPERIOD.getSelectedItem().toString());
            String End = SF.FinalTime();
            if (Start.equals(Start1) && End.equals(End1) && Day.equals(DAY.getSelectedItem().toString())) {

                int action = JOptionPane.showConfirmDialog(this, "Are you sure you want to add this data?", "Confirm Action", JOptionPane.YES_OPTION);
                if (action == 0) {
                    int Result = AR.UpdateData(SECTION.getText(), COURSETITLE.getText(), TEACHER.getText(), DAY.getSelectedItem().toString(), Start, End, ROOM.getText(), Day, Start1, End1, Room);

                    if (Result == 1) {
                        JOptionPane.showMessageDialog(this, "Room data Updated succesfully.");
                        AR.DisplayData(jTable2);
                        jButton2.setVisible(true);
                        UPDATE.setVisible(false);
                        delete.setVisible(false);
                        SECTION.setText("");
                        COURSETITLE.setText("");
                        TEACHER.setText("");
                        DAY.setSelectedIndex(0);
                        STARTHH.setSelectedIndex(0);
                        STARTMM.setSelectedIndex(0);
                        STARTPERIOD.setSelectedIndex(0);
                        ENDHH.setSelectedIndex(0);
                        ENDMM.setSelectedIndex(0);
                        ENDPERIOD.setSelectedIndex(0);
                        ROOM.setText("");

                    } else {
                        JOptionPane.showMessageDialog(this, "Error:Cannot Update data to database.Please contact support for help." + Result);
                    }

                }

            } else if (AR.CheckRoom(DAY.getSelectedItem().toString(), ROOM.getText(), Start, End)) {
                JOptionPane.showMessageDialog(this, "Error:Schedule in\n Room:" + ROOM.getText() + "\n Day:" + DAY.getSelectedItem() + "\n Time:" + Start + "-" + End + "\n is already occupied. Please adjust your start and end time ,your day or your room.");
            } else {
                int action = JOptionPane.showConfirmDialog(this, "Are you sure you want to add this data?", "Confirm Action", JOptionPane.YES_OPTION);
                if (action == 0) {
                    int Result = AR.UpdateData(SECTION.getText(), COURSETITLE.getText(), TEACHER.getText(), DAY.getSelectedItem().toString(), Start, End, ROOM.getText(), Day, Start1, End1, Room);

                    if (Result == 1) {
                        JOptionPane.showMessageDialog(this, "Room data Updated succesfully.");
                        AR.DisplayData(jTable2);
                        jButton2.setVisible(true);
                        UPDATE.setVisible(false);
                        delete.setVisible(false);
                        SECTION.setText("");
                        COURSETITLE.setText("");
                        TEACHER.setText("");
                        DAY.setSelectedIndex(0);
                        STARTHH.setSelectedIndex(0);
                        STARTMM.setSelectedIndex(0);
                        STARTPERIOD.setSelectedIndex(0);
                        ENDHH.setSelectedIndex(0);
                        ENDMM.setSelectedIndex(0);
                        ENDPERIOD.setSelectedIndex(0);
                        ROOM.setText("");

                    } else {
                        JOptionPane.showMessageDialog(this, "Error:Cannot Update data to database.Please contact support for help." + Result);
                    }
                }
            }
        }

    }//GEN-LAST:event_UPDATEActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked

        String Section = jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString();
        String Course = jTable2.getValueAt(jTable2.getSelectedRow(), 2).toString();
        String Teacher = jTable2.getValueAt(jTable2.getSelectedRow(), 3).toString();
        Day = jTable2.getValueAt(jTable2.getSelectedRow(), 4).toString();
        Start1 = jTable2.getValueAt(jTable2.getSelectedRow(), 5).toString();
        End1 = jTable2.getValueAt(jTable2.getSelectedRow(), 6).toString();
        Room = jTable2.getValueAt(jTable2.getSelectedRow(), 7).toString();

        SECTION.setText(Section);
        COURSETITLE.setText(Course);
        TEACHER.setText(Teacher);
        DAY.setSelectedItem(Day);
        String[] Split1 = Start1.split(":", 2);
        String[] Split2 = Split1[1].split(" ", 2);
        STARTHH.setSelectedItem(Split1[0]);
        STARTMM.setSelectedItem(Split2[0]);
        STARTPERIOD.setSelectedItem(Split2[1]);

        String[] Split11 = End1.split(":", 2);
        String[] Split22 = Split11[1].split(" ", 2);
        ENDHH.setSelectedItem(Split11[0]);
        ENDMM.setSelectedItem(Split22[0]);
        ENDPERIOD.setSelectedItem(Split22[1]);
        ROOM.setText(Room);
        jButton2.setVisible(false);
        UPDATE.setVisible(true);
        delete.setVisible(true);
        CANCEL.setVisible(true);
        jButton3.setVisible(false);
    }//GEN-LAST:event_jTable2MouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int action = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this data?\n When you press ok this action cannot be undone.", "Confirm Action", JOptionPane.YES_OPTION);
        if (action == 0) {
            String pass = JOptionPane.showInputDialog("Enter your password to confirm this action");
            System.out.println(pass);

            if (new Add_Room().ValidateDelete(pass)) {

                StringFormater SF = new StringFormater();

                SF.setHours(STARTHH.getSelectedItem().toString());
                SF.setMinutes(STARTMM.getSelectedItem().toString());
                SF.setPeriod(STARTPERIOD.getSelectedItem().toString());
                String Start = SF.FinalTime();
                SF.setHours(ENDHH.getSelectedItem().toString());
                SF.setMinutes(ENDMM.getSelectedItem().toString());
                SF.setPeriod(ENDPERIOD.getSelectedItem().toString());
                String End = SF.FinalTime();
                new Add_Room().DeleteData(DAY.getSelectedItem().toString(), Start, End, ROOM.getText());
                JOptionPane.showMessageDialog(this, "Data deleted successfully");
                jButton2.setVisible(true);
                UPDATE.setVisible(false);
                delete.setVisible(false);
                new Add_Room().DisplayData(jTable2);

            } else {
                JOptionPane.showMessageDialog(this, "Error:Wrong password.Please try again");
            }

        }
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new DASHBOARD().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void CANCELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CANCELActionPerformed
        SECTION.setText("");
        COURSETITLE.setText("");
        TEACHER.setText("");
        DAY.setSelectedIndex(0);

        STARTHH.setSelectedIndex(0);
        STARTMM.setSelectedIndex(0);
        STARTPERIOD.setSelectedIndex(0);

        ENDHH.setSelectedIndex(0);
        ENDMM.setSelectedIndex(0);
        ENDPERIOD.setSelectedIndex(0);
        ROOM.setText("");
        jButton2.setVisible(true);
        UPDATE.setVisible(false);
        delete.setVisible(false);
        jButton3.setVisible(true);
        CANCEL.setVisible(false);
    }//GEN-LAST:event_CANCELActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
new Room_Print().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ROOM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ROOM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ROOM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ROOM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ROOM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CANCEL;
    private javax.swing.JTextField COURSETITLE;
    private javax.swing.JComboBox<String> DAY;
    private javax.swing.JComboBox<String> ENDHH;
    private javax.swing.JComboBox<String> ENDMM;
    private javax.swing.JComboBox<String> ENDPERIOD;
    private javax.swing.JTextField ROOM;
    private javax.swing.JTextField SEARCH;
    private javax.swing.JButton SEARCHBUTTON;
    private javax.swing.JTextField SECTION;
    private javax.swing.JComboBox<String> STARTHH;
    private javax.swing.JComboBox<String> STARTMM;
    private javax.swing.JComboBox<String> STARTPERIOD;
    private javax.swing.JTextField TEACHER;
    private javax.swing.JButton UPDATE;
    private javax.swing.JButton delete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
