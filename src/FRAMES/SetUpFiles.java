/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FRAMES;

import cs_system.DB_class.Dispose;
import cs_system.DB_class.Setup;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.concurrent.TimeUnit;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public final class SetUpFiles extends javax.swing.JFrame {

    /**
     * Creates new form SetUpFiles
     */
    public SetUpFiles() {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SETTING UP FILE DIRECTORIES AND DATABASE");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 420, 39));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Setting up database and file directories");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 420, 39));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 280));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetUpFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetUpFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetUpFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetUpFiles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // 
                SetUpFiles sf = new SetUpFiles();
                //
                sf.setVisible(true);

                Setup st = new Setup();
                // condition to check if the setup is done from the past.If not it will open the eula frame
                if (st.checkSetUp() == 1) {
                    //if this is 1 then it will dispose this SetUpFiles frame and Show the LOG IN frame 
                    sf.dispose();
                    new LOGIN_FRAME().setVisible(true);

                } else {
//If it return 0 this will create set up files and folder to C drive 
                    try {
                        //Create file to C drive named Command.txt which will contain its commands like making the directory
                        File c = new File("C:\\Command.txt");
                        FileWriter fr = new FileWriter(c);
                        //writing the command to text file using file writer method
                        fr.write("mkdir C:\\cs_system\\bin\\import\\backup\nmkdir C:\\cs_system\\bin\\export\nmkdir C:\\cs_system\\bin\\import\\setup\nexit");
                        //Flushing the commands to text file 
                        fr.flush();
                        //Closing the file writer
                        fr.close();
                        //create a cmd process to exedcute commands
                        ProcessBuilder pb = new ProcessBuilder("cmd");
                        //use the Command.txt as input of proccess
                        pb.redirectInput(c);
                        //start the process and transfer it to Process method to use .waitFor() method to detirmine if the process is done or not
                        Process p = pb.start();

                        if (p.waitFor() == 0) {
                            //if the directory is created then this will procceed to creating files in the directory
                               File imp = new File("C:\\cs_system\\bin\\import\\input.txt");
            PrintWriter writer = new PrintWriter(imp);
        
            writer.close();

            FileWriter fw = new FileWriter(imp, false);
            fw.write("cd C:\\Program Files\\MySQL\\MySQL Server 5.7\\bin\n"
                    + "mysqldump -uroot -p1234 cs_system> C:\\cs_system\\bin\\import\\backup\\exported.sql\n"
                    + "\n"
                    + "mysql -u root -p1234\n"
                    + "CREATE DATABASE cs_system;\n"
                    + "\n"
                    + "mysql -u root -p1234 cs_system< C:\\cs_system\\bin\\import\\input.txt\n"
                    + "\n"
                    + "exit");
            fw.flush();
            fw.close();
//This process will make the export command to backup the data 
                            File exp = new File("C:\\cs_system\\bin\\export\\input.txt");
                            FileWriter fx = new FileWriter(exp);
                            fx.write("cd C:\\Program Files\\MySQL\\MySQL Server 5.7\\bin\n"
                                    + "mysqldump -uroot -p1234 cs_system --ignore-table=cs_system.credintials> %USERPROFILE%\\Desktop\\exported.sql\n"
                                    + "exit");
                            fx.flush();
                            fx.close();
                            //This process will create a command file to be feed to process later on .This commands will create the table and data needed to run this program

                            File setup = new File("C:\\cs_system\\bin\\import\\setup\\setup.txt");
                            FileWriter fz = new FileWriter(setup);
                            fz.write("cd C:\\Program Files\\MySQL\\MySQL Server 5.7\\bin\n"
                                    + "mysql -u root -p1234 -e\"create database cs_system;\"\n"
                                    + "mysql -u root -p1234 cs_system< C:\\cs_system\\bin\\import\\setup\\setup.sql\n"
                                    + "\n"
                                    + "exit");
                            fz.flush();
                            fz.close();
                            //This process will make the setup.sql file which will be used by the setup.txt later
                            File query = new File("C:\\cs_system\\bin\\import\\setup\\setup.sql");
                            FileWriter fq = new FileWriter(query);
                            fq.write("/*\n"
                                    + "SQLyog Ultimate v10.00 Beta1\n"
                                    + "MySQL - 5.7.30-log : Database - cs_system\n"
                                    + "*********************************************************************\n"
                                    + "*/\n"
                                    + "\n"
                                    + "/*!40101 SET NAMES utf8 */;\n"
                                    + "\n"
                                    + "/*!40101 SET SQL_MODE=''*/;\n"
                                    + "\n"
                                    + "/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;\n"
                                    + "/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;\n"
                                    + "/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;\n"
                                    + "/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;\n"
                                    + "CREATE DATABASE /*!32312 IF NOT EXISTS*/`cs_system` /*!40100 DEFAULT CHARACTER SET latin1 */;\n"
                                    + "\n"
                                    + "USE `cs_system`;\n"
                                    + "\n"
                                    + "/*Table structure for table `credintials` */\n"
                                    + "\n"
                                    + "DROP TABLE IF EXISTS `credintials`;\n"
                                    + "\n"
                                    + "CREATE TABLE `credintials` (\n"
                                    + "  `ID` int(4) NOT NULL AUTO_INCREMENT,\n"
                                    + "  `USERNAME` varchar(40) DEFAULT NULL,\n"
                                    + "  `PASSWORD` varchar(40) DEFAULT NULL,\n"
                                    + "  `IS_EXIST` varchar(40) DEFAULT NULL,\n"
                                    + "  PRIMARY KEY (`ID`)\n"
                                    + ") ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;\n"
                                    + "\n"
                                    + "/*Data for the table `credintials` */\n"
                                    + "\n"
                                    + "insert  into `credintials`(`ID`,`USERNAME`,`PASSWORD`,`IS_EXIST`) values (1,'admin','admin','true');\n"
                                    + "\n"
                                    + "/*Table structure for table `faculty` */\n"
                                    + "\n"
                                    + "DROP TABLE IF EXISTS `faculty`;\n"
                                    + "\n"
                                    + "CREATE TABLE `faculty` (\n"
                                    + "  `ID` int(4) NOT NULL AUTO_INCREMENT,\n"
                                    + "  `SECTION` varchar(40) DEFAULT NULL,\n"
                                    + "  `COURSE_TITLE` varchar(40) DEFAULT NULL,\n"
                                    + "  `DEPARTMENT` varchar(40) DEFAULT NULL,\n"
                                    + "  `DAYS` varchar(40) DEFAULT NULL,\n"
                                    + "  `START` varchar(40) DEFAULT NULL,\n"
                                    + "  `END` varchar(40) DEFAULT NULL,\n"
                                    + "  `ROOM` varchar(40) DEFAULT NULL,\n"
                                    + "  `IS_EXIST` varchar(40) DEFAULT NULL,\n"
                                    + "  PRIMARY KEY (`ID`)\n"
                                    + ") ENGINE=InnoDB DEFAULT CHARSET=latin1;\n"
                                    + "\n"
                                    + "/*Data for the table `faculty` */\n"
                                    + "\n"
                                    + "/*Table structure for table `room` */\n"
                                    + "\n"
                                    + "DROP TABLE IF EXISTS `room`;\n"
                                    + "\n"
                                    + "CREATE TABLE `room` (\n"
                                    + "  `ID` int(4) NOT NULL AUTO_INCREMENT,\n"
                                    + "  `SECTION` varchar(40) DEFAULT NULL,\n"
                                    + "  `COURSE_TITLE` varchar(40) DEFAULT NULL,\n"
                                    + "  `TEACHER` varchar(40) DEFAULT NULL,\n"
                                    + "  `DAY` varchar(40) DEFAULT NULL,\n"
                                    + "  `START` varchar(20) DEFAULT NULL,\n"
                                    + "  `END` varchar(20) DEFAULT NULL,\n"
                                    + "  `ROOM` varchar(20) DEFAULT NULL,\n"
                                    + "  `IS_USED_ROOM` varchar(20) DEFAULT NULL,\n"
                                    + "  `IS_USED_TEACHER` varchar(20) DEFAULT NULL,\n"
                                    + "  `IS_USED_FACULTY` varchar(20) DEFAULT NULL,\n"
                                    + "  `IS_USED_SECTION` varchar(20) DEFAULT NULL,\n"
                                    + "  `IS_EXIST` varchar(20) DEFAULT NULL,\n"
                                    + "  PRIMARY KEY (`ID`)\n"
                                    + ") ENGINE=InnoDB DEFAULT CHARSET=latin1;\n"
                                    + "\n"
                                    + "/*Data for the table `room` */\n"
                                    + "\n"
                                    + "/*Table structure for table `section` */\n"
                                    + "\n"
                                    + "DROP TABLE IF EXISTS `section`;\n"
                                    + "\n"
                                    + "CREATE TABLE `section` (\n"
                                    + "  `ID` int(4) NOT NULL AUTO_INCREMENT,\n"
                                    + "  `SECTION` varchar(40) DEFAULT NULL,\n"
                                    + "  `SUBJECT_CODE` varchar(40) DEFAULT NULL,\n"
                                    + "  `DESCRIPTION` varchar(250) DEFAULT NULL,\n"
                                    + "  `DEPARTMENT` varchar(40) DEFAULT NULL,\n"
                                    + "  `SUNITS` varchar(40) DEFAULT NULL,\n"
                                    + "  `TUNITS` varchar(40) DEFAULT NULL,\n"
                                    + "  `DAY` varchar(40) DEFAULT NULL,\n"
                                    + "  `START` varchar(40) DEFAULT NULL,\n"
                                    + "  `END` varchar(40) DEFAULT NULL,\n"
                                    + "  `ROOM` varchar(40) DEFAULT NULL,\n"
                                    + "  `STUDENT_NUMBR` varchar(40) DEFAULT NULL,\n"
                                    + "  `REMARK` varchar(40) DEFAULT NULL,\n"
                                    + "  `IS_EXIST` varchar(40) DEFAULT NULL,\n"
                                    + "  PRIMARY KEY (`ID`)\n"
                                    + ") ENGINE=InnoDB DEFAULT CHARSET=latin1;\n"
                                    + "\n"
                                    + "/*Data for the table `section` */\n"
                                    + "\n"
                                    + "/*Table structure for table `setup` */\n"
                                    + "\n"
                                    + "DROP TABLE IF EXISTS `setup`;\n"
                                    + "\n"
                                    + "CREATE TABLE `setup` (\n"
                                    + "  `ID` int(4) NOT NULL AUTO_INCREMENT,\n"
                                    + "  `IS_SETUP` varchar(40) DEFAULT NULL,\n"
                                    + "  `IS_ACCEPT` varchar(40) DEFAULT NULL,\n"
                                    + "  PRIMARY KEY (`ID`)\n"
                                    + ") ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=latin1;\n"
                                    + "\n"
                                    + "/*Data for the table `setup` */\n"
                                    + "\n"
                                    + "insert  into `setup`(`ID`,`IS_SETUP`,`IS_ACCEPT`) values (1,'false','false');\n"
                                    + "\n"
                                    + "/*Table structure for table `teacher` */\n"
                                    + "\n"
                                    + "DROP TABLE IF EXISTS `teacher`;\n"
                                    + "\n"
                                    + "CREATE TABLE `teacher` (\n"
                                    + "  `ID` int(11) NOT NULL AUTO_INCREMENT,\n"
                                    + "  `TEACHER_NAME` varchar(40) DEFAULT NULL,\n"
                                    + "  `PROGRAM` varchar(50) DEFAULT NULL,\n"
                                    + "  `SECTION` varchar(50) DEFAULT NULL,\n"
                                    + "  `PSCS_CODE` varchar(50) DEFAULT NULL,\n"
                                    + "  `COURSE_TITLE` varchar(150) DEFAULT NULL,\n"
                                    + "  `DEPARTMENT` varchar(50) DEFAULT NULL,\n"
                                    + "  `SUNITS` varchar(50) DEFAULT NULL,\n"
                                    + "  `TUNITS` varchar(50) DEFAULT NULL,\n"
                                    + "  `CONTRACT_HOURS` varchar(50) DEFAULT NULL,\n"
                                    + "  `DAYS` varchar(50) DEFAULT NULL,\n"
                                    + "  `START` varchar(50) DEFAULT NULL,\n"
                                    + "  `END` varchar(50) DEFAULT NULL,\n"
                                    + "  `ROOM` varchar(50) DEFAULT NULL,\n"
                                    + "  `REMARKS` varchar(50) DEFAULT NULL,\n"
                                    + "  `IS_EXIST` varchar(40) DEFAULT NULL,\n"
                                    + "  PRIMARY KEY (`ID`)\n"
                                    + ") ENGINE=InnoDB DEFAULT CHARSET=latin1;\n"
                                    + "\n"
                                    + "/*Data for the table `teacher` */\n"
                                    + "\n"
                                    + "/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;\n"
                                    + "/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;\n"
                                    + "/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;\n"
                                    + "/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;");
                            fq.flush();
                            fq.close();
                            //This will use the setup.txt as input on cmd;
                            pb.redirectInput(setup);
                            //this will log the output error of cmd process
                            pb.redirectError(new File("C:/cs_system/bin/error.txt"));
                           //This will start the process
                            p = pb.start();

                            if (p.waitFor() == 0) {
//This will dispose this frame
                                sf.dispose();
//This will show the EULA frame
                                new SetUp().setVisible(true);
                            } 
                            //This will return the indicator if an error occured
                            else {
                                
                                System.out.println("Unknown error occured");
                            }
                        } else {
                            System.out.println("Unknown error occured");
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
