/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FRAMES;

import FRAMES.CLASSES.RegexChecker;
import FRAMES.PrintFrame.Teacher_Print;
import SIMPLE_ADD.ADD_TEACHER;
import SIMPLE_RECORD.CLASSES.Store_Selected;
import cs_system.DB_class.Add_Room;
import cs_system.DB_class.Add_Teacher;
import java.io.File;
import java.util.Scanner;
import javax.swing.JOptionPane;

/**
 *
 * @author monica hancock
 */
public class ADDTEACHER extends javax.swing.JFrame {

    String Day;
    String start;
    String end;
    String room;

    /**
     * Creates new form ADDTEACHER
     */
    public ADDTEACHER() {
        initComponents();
        Add_Teacher AT = new Add_Teacher();
        AT.DisplayData(SCHEDTABLE);
        DELETE.setVisible(false);
        UPDATE.setVisible(false);

    }

    public void Splitter(String data) {
        Scanner sc = new Scanner(data);
        sc.useDelimiter("-");
        start = sc.next();
        end = sc.next();
        room = sc.next();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        SCHEDTABLE = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        SECTION = new javax.swing.JTextField();
        PSCSCODE = new javax.swing.JTextField();
        COURSETITLE = new javax.swing.JTextField();
        DEPARTMENT = new javax.swing.JTextField();
        SUNITS = new javax.swing.JTextField();
        CONTRACTHOURS = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        REMARK = new javax.swing.JTextField();
        DELETE = new javax.swing.JButton();
        PROGRAM = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        TUNITS = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        DAY = new javax.swing.JComboBox<>();
        SCHED = new javax.swing.JComboBox<>();
        ADD = new javax.swing.JButton();
        RESET = new javax.swing.JButton();
        TEACHER_NAME = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        UPDATE = new javax.swing.JButton();
        jTextField13 = new javax.swing.JTextField();
        SEARCHBUTTON = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        BACKGROUNDFORADDTEACHER = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 204, 255));
        setForeground(new java.awt.Color(102, 204, 255));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setBackground(new java.awt.Color(153, 204, 255));
        jScrollPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204), 3));
        jScrollPane4.setForeground(new java.awt.Color(0, 0, 204));
        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        SCHEDTABLE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "TEACHER NAME", "PROGRAM", "SECTION", "PSCS CODE", "COURSE TITLE", "DEPARTMENT", "S UNITS", "T UNITS", "CONTRACT HOURS", "DAYS", "START TIME", "END TIME", "ROOM", "REMARKS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SCHEDTABLE.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        SCHEDTABLE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SCHEDTABLEMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(SCHEDTABLE);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, 700, 670));

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(SECTION, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 270, 30));
        jPanel1.add(PSCSCODE, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 270, 30));
        jPanel1.add(COURSETITLE, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 220, 270, 30));
        jPanel1.add(DEPARTMENT, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 270, 270, 30));
        jPanel1.add(SUNITS, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 270, 30));

        CONTRACTHOURS.setEditable(false);
        CONTRACTHOURS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CONTRACTHOURSActionPerformed(evt);
            }
        });
        jPanel1.add(CONTRACTHOURS, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 270, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("SECTION");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("PSCS CODE");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("COURSE TITLE");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("DEPARTMENT");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("S UNITS");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("CONTACT HOURS");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 400, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 0));
        jLabel10.setText("DAYS");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 450, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 0));
        jLabel12.setText("REMARK");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, -1, -1));
        jPanel1.add(REMARK, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 570, 270, 30));

        DELETE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DELETE.setText("DELETE");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });
        jPanel1.add(DELETE, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 690, 140, 30));
        jPanel1.add(PROGRAM, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 270, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 0));
        jLabel13.setText("PROGRAM");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        TUNITS.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                TUNITSFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                TUNITSFocusLost(evt);
            }
        });
        TUNITS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TUNITSKeyPressed(evt);
            }
        });
        jPanel1.add(TUNITS, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 270, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        jLabel11.setText("T UNITS");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 350, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 0));
        jLabel14.setText("AVAILABLE SCHEDULE");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 500, -1, -1));

        DAY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY", " " }));
        DAY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DAYActionPerformed(evt);
            }
        });
        jPanel1.add(DAY, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 270, 30));

        jPanel1.add(SCHED, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 520, 270, 30));

        ADD.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ADD.setText("ADD");
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });
        jPanel1.add(ADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 610, 140, 30));

        RESET.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RESET.setText("RESET");
        RESET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RESETActionPerformed(evt);
            }
        });
        jPanel1.add(RESET, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 650, 140, 30));
        jPanel1.add(TEACHER_NAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 270, 30));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 0));
        jLabel16.setText("TEACHER NAME");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, -1, -1));

        UPDATE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UPDATE.setText("UPDATE");
        UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UPDATEActionPerformed(evt);
            }
        });
        jPanel1.add(UPDATE, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 610, 140, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 470, 720));

        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField13, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 550, 30));

        SEARCHBUTTON.setBackground(new java.awt.Color(0, 0, 153));
        SEARCHBUTTON.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SEARCHBUTTON.setForeground(new java.awt.Color(255, 255, 255));
        SEARCHBUTTON.setText("SEARCH");
        SEARCHBUTTON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEARCHBUTTONActionPerformed(evt);
            }
        });
        getContentPane().add(SEARCHBUTTON, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 70, 110, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/exit-2.png"))); // NOI18N
        jButton1.setText("BACK");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 160, 50));

        jButton2.setText("EXPORT DATA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 20, -1, -1));

        BACKGROUNDFORADDTEACHER.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGE/BACKFORADDTEACHER - Copy - Copy.jpg"))); // NOI18N
        BACKGROUNDFORADDTEACHER.setMaximumSize(new java.awt.Dimension(1280, 800));
        BACKGROUNDFORADDTEACHER.setMinimumSize(new java.awt.Dimension(800, 800));
        getContentPane().add(BACKGROUNDFORADDTEACHER, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 800));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
        Add_Teacher AT = new Add_Teacher();
        if (!DAY.getSelectedItem().toString().equals(Day) && SCHED.getSelectedItem().equals(start + "-" + end + "-" + room)) {
            JOptionPane.showMessageDialog(this, "Error:Schedule doesn't match to database");
        } else {
            AT.Splitter(SCHED.getSelectedItem().toString());
            int choice = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this schedule?", "Confirm Action", JOptionPane.OK_OPTION);
            if (choice == 1) {
                String pass = JOptionPane.showInputDialog("Enter your password to confirm this action");
                if (new Add_Room().ValidateDelete(pass)) {
                    if (AT.DeleteData(DAY.getSelectedItem().toString()) == 1) {
                        JOptionPane.showMessageDialog(this, "Teacher schedule deleted successfully.");
                        TEACHER_NAME.setText("");
                        PROGRAM.setText("");
                        SECTION.setText("");
                        PSCSCODE.setText("");
                        COURSETITLE.setText("");
                        DEPARTMENT.setText("");
                        SUNITS.setText("");
                        TUNITS.setText("");
                        CONTRACTHOURS.setText("");
                        DAY.setSelectedIndex(0);
                        SCHED.removeAllItems();
                        REMARK.setText("");
                        AT.DisplayData(SCHEDTABLE);

                    } else {

                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Wrong password please try again");
                }
            }

        }
    }//GEN-LAST:event_DELETEActionPerformed

    private void SEARCHBUTTONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEARCHBUTTONActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SEARCHBUTTONActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new DASHBOARD().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        Add_Teacher AT = new Add_Teacher();
        if (TEACHER_NAME.getText().isEmpty()
                || PROGRAM.getText().isEmpty()
                || SECTION.getText().isEmpty()
                || PSCSCODE.getText().isEmpty()
                || COURSETITLE.getText().isEmpty()
                || DEPARTMENT.getText().isEmpty()
                || SUNITS.getText().isEmpty()
                || TUNITS.getText().isEmpty()
                || CONTRACTHOURS.getText().isEmpty()
                || DAY.getSelectedItem().equals("DAY")
                || REMARK.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Error:Empty fields are not allowed.");

        } else if (new RegexChecker().Checkdata(SUNITS.getText())) {
            JOptionPane.showMessageDialog(this, "S UNITS cannot be non numerical character(letters and special characters)");
        } else if (new RegexChecker().Checkdata(TUNITS.getText())) {
            JOptionPane.showMessageDialog(this, "T UNITS cannot be non numerical character(letters and special characters)");
        } else {

            Splitter(SCHED.getSelectedItem().toString());
            AT.Splitter(SCHED.getSelectedItem().toString());
            if (AT.InsertData(TEACHER_NAME.getText(), PROGRAM.getText(), SECTION.getText(), PSCSCODE.getText(), COURSETITLE.getText(), DEPARTMENT.getText(), SUNITS.getText(), TUNITS.getText(), CONTRACTHOURS.getText(), DAY.getSelectedItem().toString(), start, end, room, REMARK.getText()) == 1) {
                if (AT.UpdateRoom(DAY.getSelectedItem().toString(), "true") == 1) {
                    JOptionPane.showMessageDialog(this, "Teacher schedule inserted successfully.");
                    TEACHER_NAME.setText("");
                    PROGRAM.setText("");
                    SECTION.setText("");
                    PSCSCODE.setText("");
                    COURSETITLE.setText("");
                    DEPARTMENT.setText("");
                    SUNITS.setText("");
                    TUNITS.setText("");
                    CONTRACTHOURS.setText("");
                    DAY.setSelectedIndex(0);
                    SCHED.removeAllItems();
                    REMARK.setText("");
                    AT.DisplayData(SCHEDTABLE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error:Update data error");

                }
            } else {
                JOptionPane.showMessageDialog(this, "Insert data error");
            }
        }
    }//GEN-LAST:event_ADDActionPerformed

    private void RESETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RESETActionPerformed
        Add_Teacher AT = new Add_Teacher();
        TEACHER_NAME.setText("");
        PROGRAM.setText("");
        SECTION.setText("");
        PSCSCODE.setText("");
        COURSETITLE.setText("");
        DEPARTMENT.setText("");
        SUNITS.setText("");
        TUNITS.setText("");
        CONTRACTHOURS.setText("");
        DAY.setSelectedIndex(0);
        REMARK.setText("");
        SCHED.removeAllItems();
        AT.DisplayData(SCHEDTABLE);
    }//GEN-LAST:event_RESETActionPerformed

    private void UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UPDATEActionPerformed
        Add_Teacher AT = new Add_Teacher();
        if (new RegexChecker().Checkdata(SUNITS.getText())) {
            JOptionPane.showMessageDialog(this, "S UNITS cannot be non numerical character(letters and special characters)");
        } else if (new RegexChecker().Checkdata(TUNITS.getText())) {
            JOptionPane.showMessageDialog(this, "T UNITS cannot be non numerical character(letters and special characters)");
        } else if (DAY.getSelectedItem().toString().equals(Day) && SCHED.getSelectedItem().equals(start + "-" + end + "-" + room)) {
            AT.Splitter(SCHED.getSelectedItem().toString());
            if (AT.UpdateData(TEACHER_NAME.getText(), PROGRAM.getText(), SECTION.getText(), PSCSCODE.getText(), COURSETITLE.getText(), DEPARTMENT.getText(), SUNITS.getText(), TUNITS.getText(), CONTRACTHOURS.getText(), DAY.getSelectedItem().toString(), start, end, room, REMARK.getText(), Day, start, end, room) == 1) {
//                if (AT.UpdateRoom(DAY.getSelectedItem().toString(), "true") == 1) {
                JOptionPane.showMessageDialog(this, "Teacher schedult inserted successfully.");
                TEACHER_NAME.setText("");
                PROGRAM.setText("");
                SECTION.setText("");
                PSCSCODE.setText("");
                COURSETITLE.setText("");
                DEPARTMENT.setText("");
                SUNITS.setText("");
                TUNITS.setText("");
                CONTRACTHOURS.setText("");
                DAY.setSelectedIndex(0);
                SCHED.removeAllItems();
                REMARK.setText("");
                AT.DisplayData(SCHEDTABLE);
                ADD.setVisible(true);
                DELETE.setVisible(false);
                UPDATE.setVisible(false);
//                } else {
//                    JOptionPane.showMessageDialog(this, "Error:Update data error");

//                }
            } else {
                JOptionPane.showMessageDialog(this, "Insert data error");
            }
        } else {
            AT.Splitter(SCHED.getSelectedItem().toString());
            if (AT.UpdateData(TEACHER_NAME.getText(), PROGRAM.getText(), SECTION.getText(), PSCSCODE.getText(), COURSETITLE.getText(), DEPARTMENT.getText(), SUNITS.getText(), TUNITS.getText(), CONTRACTHOURS.getText(), DAY.getSelectedItem().toString(), start, end, room, REMARK.getText(), Day, start, end, room) == 1) {
                if (AT.UpdateRoom(DAY.getSelectedItem().toString(), "true") == 1) {
                    if (AT.UpdateRoomBack(Day, start, end, room, "true") == 1) {
                        System.out.println(Day);
                        System.out.println(start);
                        System.out.println(end);
                        System.out.println(room);
                        JOptionPane.showMessageDialog(this, "Teacher schedult inserted successfully.");
                        TEACHER_NAME.setText("");
                        PROGRAM.setText("");
                        SECTION.setText("");
                        PSCSCODE.setText("");
                        COURSETITLE.setText("");
                        DEPARTMENT.setText("");
                        SUNITS.setText("");
                        TUNITS.setText("");
                        CONTRACTHOURS.setText("");
                        DAY.setSelectedIndex(0);
                        SCHED.removeAllItems();
                        REMARK.setText("");
                        AT.DisplayData(SCHEDTABLE);
                        ADD.setVisible(true);
                        DELETE.setVisible(false);
                        UPDATE.setVisible(false);

                    } else {
                        JOptionPane.showMessageDialog(this, "Error:Cannot update for unknown reason.Please contact support");

                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Error:Update data error");

                }
            } else {
                JOptionPane.showMessageDialog(this, "Insert data error");
            }
        }
    }//GEN-LAST:event_UPDATEActionPerformed

    private void DAYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DAYActionPerformed
        Add_Teacher AT = new Add_Teacher();
        if (!DAY.getSelectedItem().toString().equals("DAY")) {
            if (AT.LoadScheds(SCHED, DAY.getSelectedItem().toString()) == 0) {
                JOptionPane.showMessageDialog(this, "No schedule available for selected day (" + DAY.getSelectedItem() + ").\nPlease schedule reffering to selected day in Add Room tab");
            }
        }

    }//GEN-LAST:event_DAYActionPerformed

    private void SCHEDTABLEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SCHEDTABLEMouseClicked

        String name = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 1).toString();
        String program = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 2).toString();
        String section = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 3).toString();
        String pscs = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 4).toString();
        String course = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 5).toString();
        String department = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 6).toString();
        String sunits = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 7).toString();
        String tunits = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 8).toString();
        String contract = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 9).toString();
        Day = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 10).toString();
        start = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 11).toString();
        end = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 12).toString();
        room = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 13).toString();
        String remarks = SCHEDTABLE.getValueAt(SCHEDTABLE.getSelectedRow(), 14).toString();

        TEACHER_NAME.setText(name);
        PROGRAM.setText(program);
        SECTION.setText(section);
        PSCSCODE.setText(pscs);
        CONTRACTHOURS.setText(contract);
        COURSETITLE.setText(course);
        DEPARTMENT.setText(department);
        SUNITS.setText(sunits);
        TUNITS.setText(tunits);
        DAY.setSelectedItem(Day);
        SCHED.insertItemAt(start + "-" + end + "-" + room, 0);
        SCHED.setSelectedIndex(0);
        REMARK.setText(remarks);
        ADD.setVisible(false);
        DELETE.setVisible(true);
        UPDATE.setVisible(true);

    }//GEN-LAST:event_SCHEDTABLEMouseClicked

    private void TUNITSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TUNITSKeyPressed

    }//GEN-LAST:event_TUNITSKeyPressed

    private void CONTRACTHOURSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CONTRACTHOURSActionPerformed
        int i = Integer.parseInt(SUNITS.getText().toString());
        int e = Integer.parseInt(SUNITS.getText().toString());
        String total = String.valueOf(i + e);
        CONTRACTHOURS.setText(total);
    }//GEN-LAST:event_CONTRACTHOURSActionPerformed

    private void TUNITSFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TUNITSFocusGained

    }//GEN-LAST:event_TUNITSFocusGained

    private void TUNITSFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TUNITSFocusLost
        int i = Integer.parseInt(SUNITS.getText().toString());
        int e = Integer.parseInt(TUNITS.getText().toString());

        int total = e + i;

        String totals = Integer.toString(total);
        CONTRACTHOURS.setText(totals);
    }//GEN-LAST:event_TUNITSFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
new Teacher_Print().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ADDTEACHER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ADDTEACHER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ADDTEACHER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ADDTEACHER.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ADDTEACHER().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADD;
    private javax.swing.JLabel BACKGROUNDFORADDTEACHER;
    private javax.swing.JTextField CONTRACTHOURS;
    private javax.swing.JTextField COURSETITLE;
    private javax.swing.JComboBox<String> DAY;
    private javax.swing.JButton DELETE;
    private javax.swing.JTextField DEPARTMENT;
    private javax.swing.JTextField PROGRAM;
    private javax.swing.JTextField PSCSCODE;
    private javax.swing.JTextField REMARK;
    private javax.swing.JButton RESET;
    private javax.swing.JComboBox<String> SCHED;
    private javax.swing.JTable SCHEDTABLE;
    private javax.swing.JButton SEARCHBUTTON;
    private javax.swing.JTextField SECTION;
    private javax.swing.JTextField SUNITS;
    private javax.swing.JTextField TEACHER_NAME;
    private javax.swing.JTextField TUNITS;
    private javax.swing.JButton UPDATE;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField13;
    // End of variables declaration//GEN-END:variables
}
